if(NOT ENABLE_WINDOWS_BUILD)
  cmake_minimum_required(VERSION 3.2)
  project(TIMING Fortran)
  add_executable(secondtst_NONE second_NONE.f secondtst.f)
  add_executable(secondtst_EXT_ETIME second_EXT_ETIME.f secondtst.f)
  add_executable(secondtst_EXT_ETIME_ second_EXT_ETIME_.f secondtst.f)
  add_executable(secondtst_INT_ETIME second_INT_ETIME.f secondtst.f)
  add_executable(secondtst_INT_CPU_TIME second_INT_CPU_TIME.f secondtst.f)
  add_executable(testieee tstiee.f)
  add_executable(testversion ilaver.f LAPACK_version.f)
endif()
if (CMAKE_Fortran_COMPILER_ID MATCHES "Intel")
 set (TIMER EXT_ETIME)
endif ()

add_executable(testlsame lsame.f lsametst.f)
add_executable(testslamch slamch.f lsame.f slamchtst.f)
add_executable(testdlamch dlamch.f lsame.f dlamchtst.f)
add_executable(testsecond second_${TIMER}.f secondtst.f)
add_executable(testdsecnd dsecnd_${TIMER}.f dsecndtst.f)
add_executable(testieee tstiee.f)
add_executable(testversion ilaver.f LAPACK_version.f)

if( NOT TARGET test_zcomplexabs )
  add_executable( test_zcomplexabs test_zcomplexabs.f )
endif()
if( NOT TARGET test_zcomplexdiv )
  add_executable( test_zcomplexdiv test_zcomplexdiv.f )
endif()
if( NOT TARGET test_zcomplexmult )
  add_executable( test_zcomplexmult test_zcomplexmult.f )
endif()
if( NOT TARGET test_zminMax )
  add_executable( test_zminMax test_zminMax.f )
endif()
if(ENABLE_ILP64)
add_definitions("-DInt=__int64" "-DFLA_ENABLE_ILP64" "-DUInt=unsigned __int64" "-i8")
endif()